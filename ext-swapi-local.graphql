# This is sample SDL schema for GraphQL Faker.
#
# There are two directives you can use to enhance fake data:
#   - @fake
#   - @examples
# Each directive has autocompletion working so start by typing @
#
# Press save or Cmd+Enter to apply the changes and update server. Switch to GraphiQL
# on the left panel to immediately test your changes.
# This tool also supports extending existing APIs. Check graphql-faker --help
#
# Developed with ❤️ by APIs.guru | https://github.com/APIs-guru/graphql-faker

# type Company {
#   id: ID
#   name: String @fake(type: companyName)
#   industry: String
#     @examples(values: ["IT", "Manufacturing", "Medicine", "Media"])
#   employees: [Employee!] @listLength(min: 5, max: 10)
# }

# type Employee {
#   id: ID
#   firstName: String @fake(type: firstName, locale: en_CA)
#   lastName: String @fake(type: lastName, locale: en_CA)
#   address: String @fake(type: streetAddress, options: { useFullAddress: true })
#   subordinates: [Employee!] @listLength(min: 0, max: 3)
#   company: Company
# }

# type Query {
#   employee(id: ID): Employee
#   company(id: ID): Company
#   allCompanies: [Company!]
# }

#

# type Pet {
#   name: String @fake(type: firstName)
#   image: String @fake(type: imageUrl, options: { imageKeywords: ["cats"] })
# }

# type Person {
#   name: String @fake(type: firstName)
#   lastName: String @fake(type: lastName)
#   age: Int
#   country: String @fake(type: country)
# }

type User {
  trending: WatchList @examples(values: { id: "0123", order: 0, name: "Trending Collection", slug: "trending"})
  watchLists: [WatchList]
}

type WatchList {
  id: String! @fake(type: uuid)
  order: Int! @fake(type: number, options: { minNumber: 1 })
  name: String! @fake(type: lorem, options: { loremSize: words })
  slug: String !@fake(type: lorem, options: { loremSize: word })
}


type Mutation {
  NoOp: Boolean
  GenerateNonce(address: String!): String @examples(values: ["8f13d9a7103441f37f8e7960de0c1469f2ddab11178a9a596967e91e51522c14", "123mfjh27103441f37f8e7960de0c1469f2ddab11178a9a596967e9fda"])
  VerifySignature(address: String!, signature: String!): Boolean! @examples(values: true)
}

#
type Query {
  #
  NoOp: Boolean
  user: User
  # pet: Pet
  # pets: [Pet] @listLength(min: 1, max: 10)
  # person: Person
  
}

#
scalar Time